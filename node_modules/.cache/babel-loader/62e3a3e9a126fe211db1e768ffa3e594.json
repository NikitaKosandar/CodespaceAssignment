{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\nimport axios from 'axios';\nimport history from './history';\nimport { clearToken } from './storage';\nimport composedReducer from './reducer';\nconst middleware = routerMiddleware(history);\n\nconst customMiddleWare = store => next => action => {\n  if (action.type === 'API_PROCESS') {\n    axios.interceptors.response.use(response => {\n      return response ? response : next(action);\n    }, error => {\n      if (error.response) {\n        console.log(\"error\", error.response);\n\n        if (error.response.status === 401) {\n          clearToken();\n          history.push('/login');\n        }\n      }\n    });\n  }\n\n  ;\n  next(action);\n};\n\nconst store = createStore(composedReducer, compose(applyMiddleware(customMiddleWare, middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/yash/Desktop/code-space-assignment/src/utils/store.js"],"names":["applyMiddleware","compose","createStore","routerMiddleware","axios","history","clearToken","composedReducer","middleware","customMiddleWare","store","next","action","type","interceptors","response","use","error","console","log","status","push"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,MAAMC,UAAU,GAAGL,gBAAgB,CAACE,OAAD,CAAnC;;AAEA,MAAMI,gBAAgB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAChD,MAAGA,MAAM,CAACC,IAAP,KAAgB,aAAnB,EAAkC;AAC9BT,IAAAA,KAAK,CAACU,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAiCD,QAAD,IAAc;AAC1C,aAAOA,QAAQ,GAAGA,QAAH,GAAcJ,IAAI,CAACC,MAAD,CAAjC;AACH,KAFD,EAEIK,KAAD,IAAW;AACV,UAAGA,KAAK,CAACF,QAAT,EAAmB;AACfG,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACF,QAA3B;;AACA,YAAGE,KAAK,CAACF,QAAN,CAAeK,MAAf,KAA0B,GAA7B,EAAkC;AAC9Bd,UAAAA,UAAU;AACVD,UAAAA,OAAO,CAACgB,IAAR,CAAa,QAAb;AACH;AACJ;AACJ,KAVD;AAWH;;AAAA;AACDV,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACH,CAfD;;AAkBA,MAAMF,KAAK,GAAGR,WAAW,CAACK,eAAD,EAAkBN,OAAO,CAC9CD,eAAe,CAACS,gBAAD,EAAmBD,UAAnB,CAD+B,CAAzB,CAAzB;AAIA,eAAeE,KAAf","sourcesContent":["import {applyMiddleware, compose, createStore} from 'redux';\nimport {routerMiddleware} from 'react-router-redux';\nimport axios from 'axios';\n\nimport history from './history';\nimport {clearToken} from './storage';\nimport composedReducer from './reducer';\nconst middleware = routerMiddleware(history);\n\nconst customMiddleWare = store => next => action => {\n    if(action.type === 'API_PROCESS') {\n        axios.interceptors.response.use((response) => {\n            return response ? response : next(action);\n        }, (error) => {\n            if(error.response) {\n                console.log(\"error\", error.response);\n                if(error.response.status === 401) {\n                    clearToken();\n                    history.push('/login');\n                }\n            }\n        });\n    };\n    next(action);\n}\n\n\nconst store = createStore(composedReducer, compose(\n    applyMiddleware(customMiddleWare, middleware)\n));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}