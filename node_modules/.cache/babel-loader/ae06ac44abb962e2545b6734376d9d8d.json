{"ast":null,"code":"import history from '../../utils/history';\nimport { setToken } from '../../utils/storage';\nimport loginService from '../../components/login/loginService';\nimport * as _Constants from \"./loginConstants\";\nexport const login = payload => dispatch => {\n  dispatch(loginBegin(true));\n  loginService.login(payload).then(res => {\n    if (res) {\n      dispatch(loginSuccess(true));\n      setToken(res.token); // localStorage.setItem(`token`, '1234')\n\n      history.push('/list');\n    } else {\n      dispatch(loginFailure(false));\n      history.push('/login');\n    }\n  });\n};\n\nfunction loginBegin() {\n  return {\n    type: _Constants.FETCH_USER_BEGIN\n  };\n}\n\nfunction loginSuccess(payload, isReset) {\n  return {\n    type: _Constants.FETCH_USER_SUCCESS,\n    payload: payload,\n    isReset\n  };\n}\n\nfunction loginFailure(error) {\n  return {\n    type: _Constants.FETCH_USER_FAILURE,\n    payload: error\n  };\n}","map":{"version":3,"sources":["C:/Users/yash/Desktop/code-space-assignment/src/components/login/loginAction.js"],"names":["history","setToken","loginService","_Constants","login","payload","dispatch","loginBegin","then","res","loginSuccess","token","push","loginFailure","type","FETCH_USER_BEGIN","isReset","FETCH_USER_SUCCESS","error","FETCH_USER_FAILURE"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAO,MAAMC,KAAK,GAAIC,OAAD,IAAaC,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAACC,UAAU,CAAC,IAAD,CAAX,CAAR;AACAL,EAAAA,YAAY,CAACE,KAAb,CAAmBC,OAAnB,EAA4BG,IAA5B,CAAiCC,GAAG,IAAI;AACpC,QAAIA,GAAJ,EAAS;AACLH,MAAAA,QAAQ,CAACI,YAAY,CAAC,IAAD,CAAb,CAAR;AACAT,MAAAA,QAAQ,CAACQ,GAAG,CAACE,KAAL,CAAR,CAFK,CAGL;;AACAX,MAAAA,OAAO,CAACY,IAAR,CAAa,OAAb;AACH,KALD,MAKO;AACHN,MAAAA,QAAQ,CAACO,YAAY,CAAC,KAAD,CAAb,CAAR;AACAb,MAAAA,OAAO,CAACY,IAAR,CAAa,QAAb;AACH;AACJ,GAVD;AAWH,CAbM;;AAeP,SAASL,UAAT,GAAsB;AAClB,SAAO;AACHO,IAAAA,IAAI,EAAEX,UAAU,CAACY;AADd,GAAP;AAGH;;AAED,SAASL,YAAT,CAAsBL,OAAtB,EAA+BW,OAA/B,EAAwC;AACpC,SAAO;AACHF,IAAAA,IAAI,EAAEX,UAAU,CAACc,kBADd;AAEHZ,IAAAA,OAAO,EAAEA,OAFN;AAGHW,IAAAA;AAHG,GAAP;AAKH;;AAED,SAASH,YAAT,CAAsBK,KAAtB,EAA6B;AACzB,SAAO;AACHJ,IAAAA,IAAI,EAAEX,UAAU,CAACgB,kBADd;AAEHd,IAAAA,OAAO,EAAEa;AAFN,GAAP;AAIH","sourcesContent":["import history from '../../utils/history';\nimport { setToken } from '../../utils/storage';\nimport loginService from '../../components/login/loginService';\nimport * as _Constants from \"./loginConstants\";\nexport const login = (payload) => dispatch => {\n    dispatch(loginBegin(true));\n    loginService.login(payload).then(res => {\n        if (res) {\n            dispatch(loginSuccess(true));\n            setToken(res.token);\n            // localStorage.setItem(`token`, '1234')\n            history.push('/list');\n        } else {\n            dispatch(loginFailure(false));\n            history.push('/login');\n        }\n    });\n}\n\nfunction loginBegin() {\n    return {\n        type: _Constants.FETCH_USER_BEGIN\n    };\n}\n\nfunction loginSuccess(payload, isReset) {\n    return {\n        type: _Constants.FETCH_USER_SUCCESS,\n        payload: payload,\n        isReset\n    };\n}\n\nfunction loginFailure(error) {\n    return {\n        type: _Constants.FETCH_USER_FAILURE,\n        payload: error\n    };\n}"]},"metadata":{},"sourceType":"module"}