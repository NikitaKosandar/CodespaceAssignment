{"ast":null,"code":"import history from '../../utils/history';\nimport { setToken } from '../../utils/storage';\nimport loginService from '../../components/login/loginService';\nimport * as _Constants from \"./loginConstants\";\nconst res = {\n  token: '1234'\n};\nexport const login = payload => dispatch => {\n  dispatch(loginSuccess(true));\n  setToken(res.token); // loginService.login(payload).then(res => {\n  //     if (res) {\n  //         dispatch(loginSuccess(true));\n  //         setToken(res.token);\n  //         // localStorage.setItem(`token`, '1234')\n  //         history.push('/list');\n  //     } else {\n  //         dispatch(loginFailure(false));\n  //         history.push('/login');\n  //     }\n  // });\n};\n\nfunction loginBegin() {\n  return {\n    type: _Constants.FETCH_USER_BEGIN\n  };\n}\n\nfunction loginSuccess(payload, isReset) {\n  return {\n    type: _Constants.FETCH_USER_SUCCESS,\n    payload: payload,\n    isReset\n  };\n}\n\nfunction loginFailure(error) {\n  return {\n    type: _Constants.FETCH_USER_FAILURE,\n    payload: error\n  };\n}","map":{"version":3,"sources":["C:/Users/yash/Desktop/CodespaceAssignment/src/components/login/loginAction.js"],"names":["history","setToken","loginService","_Constants","res","token","login","payload","dispatch","loginSuccess","loginBegin","type","FETCH_USER_BEGIN","isReset","FETCH_USER_SUCCESS","loginFailure","error","FETCH_USER_FAILURE"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,MAAMC,GAAG,GAAG;AACRC,EAAAA,KAAK,EAAG;AADA,CAAZ;AAGA,OAAO,MAAMC,KAAK,GAAIC,OAAD,IAAaC,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAACC,YAAY,CAAC,IAAD,CAAb,CAAR;AACAR,EAAAA,QAAQ,CAACG,GAAG,CAACC,KAAL,CAAR,CAF0C,CAG1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAdM;;AAgBP,SAASK,UAAT,GAAsB;AAClB,SAAO;AACHC,IAAAA,IAAI,EAAER,UAAU,CAACS;AADd,GAAP;AAGH;;AAED,SAASH,YAAT,CAAsBF,OAAtB,EAA+BM,OAA/B,EAAwC;AACpC,SAAO;AACHF,IAAAA,IAAI,EAAER,UAAU,CAACW,kBADd;AAEHP,IAAAA,OAAO,EAAEA,OAFN;AAGHM,IAAAA;AAHG,GAAP;AAKH;;AAED,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,SAAO;AACHL,IAAAA,IAAI,EAAER,UAAU,CAACc,kBADd;AAEHV,IAAAA,OAAO,EAAES;AAFN,GAAP;AAIH","sourcesContent":["import history from '../../utils/history';\nimport { setToken } from '../../utils/storage';\nimport loginService from '../../components/login/loginService';\nimport * as _Constants from \"./loginConstants\";\nconst res = { \n    token : '1234'\n}\nexport const login = (payload) => dispatch => {\n    dispatch(loginSuccess(true));\n    setToken(res.token);\n    // loginService.login(payload).then(res => {\n    //     if (res) {\n    //         dispatch(loginSuccess(true));\n    //         setToken(res.token);\n    //         // localStorage.setItem(`token`, '1234')\n    //         history.push('/list');\n    //     } else {\n    //         dispatch(loginFailure(false));\n    //         history.push('/login');\n    //     }\n    // });\n}\n\nfunction loginBegin() {\n    return {\n        type: _Constants.FETCH_USER_BEGIN\n    };\n}\n\nfunction loginSuccess(payload, isReset) {\n    return {\n        type: _Constants.FETCH_USER_SUCCESS,\n        payload: payload,\n        isReset\n    };\n}\n\nfunction loginFailure(error) {\n    return {\n        type: _Constants.FETCH_USER_FAILURE,\n        payload: error\n    };\n}"]},"metadata":{},"sourceType":"module"}