{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash\\\\Desktop\\\\CodespaceAssignment\\\\src\\\\components\\\\list\\\\ListComponent.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport './listComponent.scss';\nimport data from './data';\n\nclass ListComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.getNeWData = value => {\n      let pageLength = data.length + 1;\n      console.log(pageLength);\n      value.id = pageLength;\n      let joined = data.concat(value);\n      console.log(joined);\n      this.setState({\n        listUse: joined\n      });\n    };\n\n    this.setPagination = no => {\n      let newArray = [];\n      let copyArray = [...this.state.listUse];\n\n      if (no) {\n        for (let i = 0; i < 4; i++) {\n          newArray.push(copyArray[i]);\n        }\n      }\n\n      this.setState({\n        listData: newArray\n      });\n    };\n\n    this.setPagination2 = no => {\n      let newArray = [];\n      let copyArray = [...this.state.listUse];\n      let firstNumber;\n      let secondNumber;\n\n      if (no === 1) {\n        firstNumber = 0;\n        secondNumber = 4;\n      } else {\n        no = no - 1;\n        firstNumber = 4 * no + 1;\n        secondNumber = 4 * no + 4;\n      }\n\n      if (no) {\n        copyArray.map(x => {\n          if (x.id >= firstNumber && x.id <= secondNumber) {\n            newArray.push(x);\n          }\n        });\n      }\n\n      this.setState({\n        listData: newArray\n      });\n    };\n\n    this.handleChange = event => {\n      let newArray = [];\n      const value = this.InputSearchRef.current.value;\n      let copyArray = [...this.state.listData];\n\n      if (value !== '') {\n        copyArray.map(x => {\n          if (x.name == value) {\n            newArray.push(x);\n          }\n        });\n      } else {\n        data.map(x => {\n          newArray.push(x);\n        });\n      }\n\n      this.setState({\n        listData: newArray\n      });\n    };\n\n    this.sortAge = () => {\n      let newArray = [];\n      newArray = [...this.state.listUse].sort((a, b) => {\n        if (a.name > b.name) return 1;else if (a.name < b.name) return -1;\n        return 0;\n      });\n      this.setState({\n        listUse: newArray\n      });\n      this.setPagination2(1);\n    };\n\n    this.state = {\n      listData: [],\n      listUse: [],\n      pageSize: 4,\n      pageNumber: 1\n    };\n    this.InputSearchRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      listUse: data\n    });\n    this.getNeWData(this.props.user);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.listUse !== this.state.listUse) {\n      this.setPagination(this.state.pageNumber);\n    }\n  }\n\n  render() {\n    let pagination = [];\n    let pageLength = this.state.listUse.length;\n    let pageCount = Math.ceil(pageLength / this.state.pageSize);\n\n    if (pageCount) {\n      for (var i = 1; i <= pageCount; i++) {\n        pagination.push(i);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"List Items\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      ref: this.InputSearchRef,\n      placeholder: \"Enter Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.history.push(`/create-list`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"Create User\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.sortAge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"sort\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"customers\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, \"Weight\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, \"Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, this.state.listData && this.state.listData.map((list, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, list.name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, list.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, list.price, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, list.weight, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, list.image, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, list.date, \" \"))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, pagination.map((no, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      key: index,\n      onClick: () => this.setPagination2(no),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, no)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(ListComponent);","map":{"version":3,"sources":["C:/Users/yash/Desktop/CodespaceAssignment/src/components/list/ListComponent.js"],"names":["React","connect","data","ListComponent","Component","constructor","getNeWData","value","pageLength","length","console","log","id","joined","concat","setState","listUse","setPagination","no","newArray","copyArray","state","i","push","listData","setPagination2","firstNumber","secondNumber","map","x","handleChange","event","InputSearchRef","current","name","sortAge","sort","a","b","pageSize","pageNumber","createRef","componentDidMount","props","user","componentDidUpdate","prevProps","prevState","render","pagination","pageCount","Math","ceil","history","width","list","index","description","price","weight","image","date","mapStateToProps"],"mappings":"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","sourcesContent":["    import React from \"react\";\n    import { connect } from 'react-redux';\n    import './listComponent.scss';\n    import data from './data';\n\n\n    class ListComponent extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            listData : [],\n            listUse: [],\n            pageSize : 4,\n            pageNumber : 1,\n        }\n        this.InputSearchRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({ listUse: data })\n        this.getNeWData(this.props.user); \n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.listUse !== this.state.listUse){\n            this.setPagination(this.state.pageNumber);\n        }\n    }\n\n    getNeWData = (value) =>{\n        let pageLength = data.length + 1;\n        console.log(pageLength);\n        value.id = pageLength;\n        let joined = data.concat(value);\n        console.log(joined);\n        this.setState({ listUse: joined })\n    }\n\n    setPagination = (no) => {\n        let newArray = [];\n        let copyArray = [...this.state.listUse];\n        if(no){\n            for(let i = 0; i < 4; i++){\n                newArray.push(copyArray[i])\n            }\n        }\n        this.setState({listData : newArray});\n    } \n\n    setPagination2 = (no) => {\n        let newArray = [];\n        let copyArray = [...this.state.listUse];\n        let firstNumber;\n        let secondNumber;\n        if(no === 1){\n            firstNumber = 0;\n            secondNumber = 4;\n        } else {\n            no = no - 1;\n            firstNumber = (4 * no) + 1;\n            secondNumber = 4 * no + 4;\n        }\n        if(no){\n            copyArray.map(x => {\n                if(x.id >= firstNumber && x.id <= secondNumber){\n                    newArray.push(x);\n                }\n            })\n        }\n        this.setState({listData : newArray });\n    } \n\n    handleChange = (event) => {\n        let newArray = [];\n        const value = this.InputSearchRef.current.value;\n        let copyArray = [...this.state.listData];\n        if(value !== ''){\n            copyArray.map(x => {\n                if(x.name == value) {\n                    newArray.push(x)\n                }\n            })\n        } else {\n            data.map(x => {\n                    newArray.push(x)\n            })\n        }\n        this.setState({listData : newArray});\n    }\n\n    sortAge = () => {\n        let newArray = [];\n        newArray = [...this.state.listUse].sort((a, b) => {\n            if(a.name > b.name) return 1;\n            else if(a.name < b.name) return -1;\n            return 0\n        });\n        this.setState({listUse : newArray})\n        this.setPagination2(1);\n    }\n    \n    render() {\n        let pagination = [];\n        let pageLength = this.state.listUse.length;\n        let pageCount  = Math.ceil(pageLength / this.state.pageSize);\n        if(pageCount){\n            for (var i = 1; i <= pageCount; i++) {\n                pagination.push(i);\n            } \n        }\n            return (\n                <>\n                    <div className=\"card\">\n                    <div className=\"title\">List Items</div>\n                    <div><input type=\"text\"  value={this.state.name} ref={this.InputSearchRef} placeholder=\"Enter Name\" /></div>\n                    <button onClick={this.handleChange}>Submit</button>\n                    <button onClick={() => this.props.history.push(`/create-list`)}>Create User</button>\n                    <button onClick={this.sortAge}>sort</button>\n                    <table id=\"customers\" style={{width: \"100%\"}}>\n                        <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Description</th>\n                            <th>Price</th>\n                            <th>Weight</th>\n                            <th>Image</th>\n                            <th>Date</th>\n                            {/* <th>action</th> */}\n                        </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.listData && this.state.listData.map((list, index) => (\n                                <tr key={index}>\n                                    <td>{list.name} </td>\n                                    <td>{list.description}</td>\n                                    <td>{list.price} </td>\n                                    <td>{list.weight} </td>\n                                    <td>{list.image} </td>\n                                    <td>{list.date} </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    <div>\n                        {pagination.map((no, index) =>\n                            <div className=\"box\"key={index} onClick={()=> this.setPagination2(no)}>{no}</div>\n                        )}\n                    </div>\n                    </div>\n                </>\n            )\n        }\n    }\n    \n     const mapStateToProps = state => ({\n        user : state.user\n    });\n  \n    \n    export default connect(mapStateToProps)(ListComponent);"]},"metadata":{},"sourceType":"module"}