{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yash\\\\Desktop\\\\code-space-assignment\\\\src\\\\components\\\\list\\\\ListComponent.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport './listComponent.scss';\nimport data from './data';\n\nclass ListComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.setPagination = no => {\n      let newArray = [];\n      let copyArray = data;\n\n      if (no) {\n        for (let i = 0; i < 4; i++) {\n          newArray.push(copyArray[i]);\n        }\n      }\n\n      this.setState({\n        listData: newArray\n      });\n    };\n\n    this.setPagination2 = no => {\n      let newArray = [];\n      let copyArray = [...this.state.listUse];\n      let firstNumber;\n      let secondNumber;\n\n      if (no === 1) {\n        firstNumber = 0;\n        secondNumber = 4;\n      } else {\n        no = no - 1;\n        firstNumber = 4 * no + 1;\n        secondNumber = 4 * no + 4;\n      }\n\n      if (no) {\n        copyArray.map(x => {\n          if (x.id >= firstNumber && x.id <= secondNumber) {\n            newArray.push(x);\n          }\n        });\n      }\n\n      this.setState({\n        listData: newArray\n      });\n    };\n\n    this.handleChange = event => {\n      let newArray = [];\n      const value = this.InputSearchRef.current.value;\n      let copyArray = [...this.state.listData];\n\n      if (value !== '') {\n        copyArray.map(x => {\n          if (x.name == value) {\n            newArray.push(x);\n          }\n        });\n      } else {\n        data.map(x => {\n          newArray.push(x);\n        });\n      }\n\n      this.setState({\n        listData: newArray\n      });\n    };\n\n    this.state = {\n      listData: [],\n      listUse: [],\n      pageSize: 4,\n      pageNumber: 1\n    };\n    this.InputSearchRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      listUse: data\n    });\n    this.setPagination(this.state.pageNumber);\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    let pagination = [];\n    let pageLength = this.state.listUse.length;\n    let pageCount = Math.ceil(pageLength / this.state.pageSize);\n\n    if (pageCount) {\n      for (var i = 1; i <= pageCount; i++) {\n        pagination.push(i);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"List Items\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.name,\n      ref: this.InputSearchRef,\n      placeholder: \"Enter Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.history.push(`/create-list`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Create User\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"customers\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"Weight\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, this.state.listData && this.state.listData.map((list, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, list.name, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, list.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, list.price, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, list.weight, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, list.image, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, list.date, \" \"))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, pagination.map((no, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      key: index,\n      onClick: () => this.setPagination2(no),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, no)))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(ListComponent);","map":{"version":3,"sources":["C:/Users/yash/Desktop/code-space-assignment/src/components/list/ListComponent.js"],"names":["React","connect","data","ListComponent","Component","constructor","setPagination","no","newArray","copyArray","i","push","setState","listData","setPagination2","state","listUse","firstNumber","secondNumber","map","x","id","handleChange","event","value","InputSearchRef","current","name","pageSize","pageNumber","createRef","componentDidMount","componentDidUpdate","prevProps","prevState","render","pagination","pageLength","length","pageCount","Math","ceil","props","history","width","list","index","description","price","weight","image","date","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport './listComponent.scss';\nimport data from './data';\n\n\nclass ListComponent extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n        listData : [],\n        listUse: [],\n        pageSize : 4,\n        pageNumber : 1,\n    }\n    this.InputSearchRef = React.createRef();\n}\n\ncomponentDidMount() {\n    this.setState({ listUse : data});\n    this.setPagination(this.state.pageNumber);\n}\n\ncomponentDidUpdate(prevProps, prevState){\n}\n\nsetPagination = (no) => {\n    let newArray = [];\n    let copyArray = data;\n    if(no){\n        for(let i = 0; i < 4; i++){\n            newArray.push(copyArray[i])\n        }\n    }\n    this.setState({listData : newArray});\n} \n\nsetPagination2 = (no) => {\n    let newArray = [];\n    let copyArray = [...this.state.listUse];\n    let firstNumber;\n    let secondNumber;\n    if(no === 1){\n        firstNumber = 0;\n        secondNumber = 4;\n    } else {\n        no = no - 1;\n        firstNumber = (4 * no) + 1;\n        secondNumber = 4 * no + 4;\n    }\n    if(no){\n        copyArray.map(x => {\n            if(x.id >= firstNumber && x.id <= secondNumber){\n                newArray.push(x)\n            }\n        })\n    }\n    this.setState({listData : newArray});\n} \n\n  handleChange = (event) => {\n    let newArray = [];\n    const value = this.InputSearchRef.current.value;\n    let copyArray = [...this.state.listData];\n    if(value !== ''){\n        copyArray.map(x => {\n            if(x.name == value) {\n                newArray.push(x)\n            }\n        })\n    } else {\n        data.map(x => {\n                newArray.push(x)\n        })\n    }\n    this.setState({listData : newArray});\n  }\n  \n  \n  render() {\n      let pagination = [];\n      let pageLength = this.state.listUse.length;\n      let pageCount  = Math.ceil(pageLength / this.state.pageSize);\n      if(pageCount){\n        for (var i = 1; i <= pageCount; i++) {\n            pagination.push(i);\n        } \n      }\n          return (\n            <>\n                <div className=\"card\">\n                <div className=\"title\">List Items</div>\n                <div><input type=\"text\"  value={this.state.name} ref={this.InputSearchRef} placeholder=\"Enter Name\" /></div>\n                <button onClick={this.handleChange}>Submit</button>\n                <button onClick={() => this.props.history.push(`/create-list`)}>Create User</button>\n                <table id=\"customers\" style={{width: \"100%\"}}>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Description</th>\n                        <th>Price</th>\n                        <th>Weight</th>\n                        <th>Image</th>\n                        <th>Date</th>\n                        {/* <th>action</th> */}\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.listData && this.state.listData.map((list, index) => (\n                            <tr key={index}>\n                                <td>{list.name} </td>\n                                <td>{list.description}</td>\n                                <td>{list.price} </td>\n                                <td>{list.weight} </td>\n                                <td>{list.image} </td>\n                                <td>{list.date} </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <div>\n                    {pagination.map((no, index) =>\n                        <div className=\"box\" key={index} onClick={()=> this.setPagination2(no)}>{no}</div>\n                    )}\n                </div>\n                </div>\n            </>\n          )\n      }\n  }\n  \n  const mapStateToProps = state => ({\n\n  });\n  \n  export default connect(mapStateToProps)(ListComponent);"]},"metadata":{},"sourceType":"module"}